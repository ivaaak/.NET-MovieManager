@model MovieCardViewModel
@using MovieManager.Services
@using MovieManager.Models
@using System.Linq
@using System
@using System.Globalization;
@{
	ViewData["Title"] = @Model.Movie.Title;

	var movie = Model.Movie;
	TrailerViewModel trailerModel = new TrailerViewModel();
	string posterMovieUrl = "https://image.tmdb.org/t/p/w500"+@movie.PosterPath;	
	trailerModel.TrailerKey = SearchMethodsService.GetMovieTrailerStatic(movie.Id).Result;
	trailerModel.TrailerId = movie.Id;
	var year = movie.ReleaseDate.Value.Year;
}
@section scripts{
	<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
}
<head>
	<link href="~/css/style.css" asp-append-version="true" rel="stylesheet">
	<link href="~/css/styleMovieCard.css" asp-append-version="true" rel="stylesheet">
	<link href="~/css/styleActor.css" asp-append-version="true" rel="stylesheet">
</head>



<div class="MovieCard" >
	<div class="flex-container">
	   <div class="flex-items">	
		    <a href="https://www.themoviedb.org/movie/@movie.Id">
				<img class="moviePosterBig" alt="Image" src="@posterMovieUrl"> 	
			</a>
		</div>
		<div class="flex-items">
		<h2 class="movieTitle">	@movie.Title (@year)</h2>

		<p class="movieRating"> <img class="IMDBStar" src="~/img/star.png"> @movie.VoteAverage/10 - Rating</p>
		<p class="movieDesc"> @movie.Overview </p>

		<ul class="genreContainer genreItem">
		@foreach(var genre in movie.Genres)
		{
			<li> @genre.Name</li>
		}
		<li> @movie.Runtime min</li>
		<li> lang: @movie.OriginalLanguage</li>
		</ul>
			<div class="buttonsList">
				@await Html.PartialAsync("_TrailerPartial", trailerModel)

				@if (User.Identity.IsAuthenticated)
				{
					@using (Html.BeginForm("AddMovieToPlaylistButtonClick", "Button",
											new { movieId = @movie.Id, playlistName = "watched" }, FormMethod.Post)) //this is a db movie
					{
						<button class="TrailerButton" type="submit" name="addToButton"> Add To Watched</button>
					}
					@using (Html.BeginForm("AddMovieToPlaylistButtonClick", "Button",
											new { movieId = @movie.Id, playlistName = "current" }, FormMethod.Post)) //this is a db movie
					{
						<button class="TrailerButton" type="submit" name="addToButton"> Add To Current</button>
					}
					@using (Html.BeginForm("AddMovieToPlaylistButtonClick", "Button",
											new { movieId = @movie.Id, playlistName = "future" }, FormMethod.Post)) //this is a db movie
					{
						<button class="TrailerButton" type="submit" name="addToButton"> Add To Future</button>
					}
					@using (Html.BeginForm("FavoriteMovieButtonClick", "Button",
						new { movieId = @movie.Id },   FormMethod.Post)) 
					{
						<button class="FavButton" type="submit"> ❤ </button>
					}
				}
			</div>

		</div>
	</div>
</div>

@using (Html.BeginForm("Review", "Movie",
	new { Id = @movie.Id },   FormMethod.Post)) //this is a db movie
{
	<button class="ReviewsButton" type="submit" name="addToButton"> Reviews </button>
}

<!--Actor movie Credits Column-->
<main class="resultsLeft" id="scrollBlackThin">
	<h1 class="info"> 
		<img src="~/img/watched icon2 dark.png" width="60" height="40">Actors
		<div class="hidden-info">Results</div>
	</h1>
	@foreach (var actor in Model.MovieActorsList)
	{
		string posterUrl = "https://image.tmdb.org/t/p/w500"+@actor.ProfilePath;
		<div class="movieContainer">
			<div class="flex-container">
				<a href="/Movie/ActorCard/@actor.Id">
				<div class="flex-items">	
					<img class="moviePoster" alt="Image" src="@posterUrl">
				</div>
				</a>
				
				<p class="roleTitle"> @actor.Name <br/><br/>Character: @actor.Character </p>
			</div>
		</div>
		}
	}
</main>